/******************************************************************************\
FILE:           overextension.zp
AUTHOR:         Theo Veenker <theo.veenker@beexy.nl>
ADAPTED BY:     -

DESCRIPTION:

Implementation of task: Visual Lexical Decision

For more information on the vislexdec task see readme.txt in the 
test folder.


Global structure of experiment:

  - welcome

  - phase 1 (see subfolder test)

  - thankyou


HISTORY:
2013-07-03 TV   Created.

\******************************************************************************/

requires 1.12;

import std_windows1;
import std_entry_page1;
import std_exit_page1;
import std_pause_page;
import std_blank_page;

import grouping;
import texts_nl;

import test::task;


Experiment experiment
{
    int selected_version;
    int selected_list;

    on_event:entry()
    {
        if(selected_group <= Y)
            experiment.selected_version = test::VERSION1;
        else
            experiment.selected_version = test::VERSION2;

        experiment.selected_list = selected_group % 2;

        println("Running list: " + 
            test::list_order[experiment.selected_version][experiment.selected_list][0] + ", " +
            test::list_order[experiment.selected_version][experiment.selected_list][1] + ", " +
            test::list_order[experiment.selected_version][experiment.selected_list][2]);

        // Randomize test items tables
        if (test::shuffle_test_items() != OK) terminate;
        //test::dump_test_items();
        
        show_test_windows();
    }


    on_event:message()
    {
        // On Ctrl+F4 jump unconditionally to the thank-you part.
        if (message_sender == control && message_arg == SYS_STOP)
        {
            control.mark_experiment_aborted();
            thankyou.enter();
        }
    }


    Part welcome
    {
        on_event:entry()
        {
            entry_page.set_text(WELCOME_TEXT);
            entry_page.action(this, 0s);
        }
    }


    Part phase1
    {
        on_event:entry()
        {
            test::action(this);
        }
    }


    Part thankyou
    {
        on_event:entry()
        {
            control.end_experiment();   // Check-in session.

            exit_page.set_text(THANK_YOU_TEXT);
            exit_page.action(this, 10s);
        }
    }
}
